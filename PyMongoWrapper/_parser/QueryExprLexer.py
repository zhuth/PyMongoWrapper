# Generated from QueryExpr.g by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,49,386,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,
        8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,5,11,
        181,8,11,10,11,12,11,184,9,11,1,11,1,11,1,11,1,11,5,11,190,8,11,
        10,11,12,11,193,9,11,1,11,1,11,1,11,5,11,198,8,11,10,11,12,11,201,
        9,11,1,11,3,11,204,8,11,1,12,1,12,1,12,4,12,209,8,12,11,12,12,12,
        210,1,12,1,12,5,12,215,8,12,10,12,12,12,218,9,12,1,13,1,13,1,13,
        1,13,3,13,224,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
        1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,3,18,243,8,18,1,18,3,18,
        246,8,18,1,19,4,19,249,8,19,11,19,12,19,250,1,20,1,20,3,20,255,8,
        20,1,20,1,20,1,21,3,21,260,8,21,1,21,1,21,1,21,3,21,265,8,21,1,22,
        1,22,1,22,1,23,1,23,1,23,1,23,1,23,3,23,275,8,23,1,24,1,24,1,24,
        1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,5,27,289,8,27,10,27,
        12,27,292,9,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,
        1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,
        1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,
        1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,50,
        1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,56,
        4,56,356,8,56,11,56,12,56,357,1,56,1,56,1,57,1,57,1,57,1,57,5,57,
        366,8,57,10,57,12,57,369,9,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,
        1,58,1,58,5,58,380,8,58,10,58,12,58,383,9,58,1,58,1,58,5,182,191,
        199,210,367,0,59,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,0,29,0,31,0,33,0,35,0,37,14,39,0,41,0,43,0,45,
        0,47,15,49,16,51,17,53,18,55,19,57,0,59,20,61,21,63,22,65,23,67,
        24,69,25,71,26,73,27,75,28,77,29,79,30,81,31,83,32,85,33,87,34,89,
        35,91,36,93,37,95,38,97,39,99,40,101,41,103,42,105,43,107,44,109,
        45,111,46,113,47,115,48,117,49,1,0,14,5,0,73,73,105,105,109,109,
        115,115,120,120,9,0,34,34,39,39,47,47,92,92,98,98,102,102,110,110,
        114,114,116,116,3,0,48,57,65,70,97,102,3,0,0,31,34,34,92,92,1,0,
        48,57,2,0,69,69,101,101,2,0,43,43,45,45,1,0,48,49,1,0,48,51,1,0,
        48,53,6,0,100,100,104,105,109,109,115,115,119,119,121,121,5,0,35,
        35,64,90,95,95,97,122,128,65535,3,0,9,10,13,13,32,32,2,0,10,10,13,
        13,399,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,37,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,59,1,0,0,
        0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
        0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
        0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
        0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
        0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
        1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,
        1,119,1,0,0,0,3,122,1,0,0,0,5,127,1,0,0,0,7,134,1,0,0,0,9,138,1,
        0,0,0,11,144,1,0,0,0,13,153,1,0,0,0,15,158,1,0,0,0,17,163,1,0,0,
        0,19,169,1,0,0,0,21,174,1,0,0,0,23,203,1,0,0,0,25,205,1,0,0,0,27,
        219,1,0,0,0,29,225,1,0,0,0,31,231,1,0,0,0,33,235,1,0,0,0,35,237,
        1,0,0,0,37,239,1,0,0,0,39,248,1,0,0,0,41,252,1,0,0,0,43,264,1,0,
        0,0,45,266,1,0,0,0,47,269,1,0,0,0,49,276,1,0,0,0,51,279,1,0,0,0,
        53,282,1,0,0,0,55,285,1,0,0,0,57,293,1,0,0,0,59,295,1,0,0,0,61,297,
        1,0,0,0,63,299,1,0,0,0,65,301,1,0,0,0,67,303,1,0,0,0,69,305,1,0,
        0,0,71,307,1,0,0,0,73,309,1,0,0,0,75,311,1,0,0,0,77,313,1,0,0,0,
        79,315,1,0,0,0,81,318,1,0,0,0,83,320,1,0,0,0,85,322,1,0,0,0,87,324,
        1,0,0,0,89,326,1,0,0,0,91,328,1,0,0,0,93,330,1,0,0,0,95,332,1,0,
        0,0,97,334,1,0,0,0,99,336,1,0,0,0,101,339,1,0,0,0,103,342,1,0,0,
        0,105,345,1,0,0,0,107,347,1,0,0,0,109,350,1,0,0,0,111,352,1,0,0,
        0,113,355,1,0,0,0,115,361,1,0,0,0,117,375,1,0,0,0,119,120,5,105,
        0,0,120,121,5,102,0,0,121,2,1,0,0,0,122,123,5,101,0,0,123,124,5,
        108,0,0,124,125,5,115,0,0,125,126,5,101,0,0,126,4,1,0,0,0,127,128,
        5,114,0,0,128,129,5,101,0,0,129,130,5,112,0,0,130,131,5,101,0,0,
        131,132,5,97,0,0,132,133,5,116,0,0,133,6,1,0,0,0,134,135,5,102,0,
        0,135,136,5,111,0,0,136,137,5,114,0,0,137,8,1,0,0,0,138,139,5,98,
        0,0,139,140,5,114,0,0,140,141,5,101,0,0,141,142,5,97,0,0,142,143,
        5,107,0,0,143,10,1,0,0,0,144,145,5,99,0,0,145,146,5,111,0,0,146,
        147,5,110,0,0,147,148,5,116,0,0,148,149,5,105,0,0,149,150,5,110,
        0,0,150,151,5,117,0,0,151,152,5,101,0,0,152,12,1,0,0,0,153,154,5,
        104,0,0,154,155,5,97,0,0,155,156,5,108,0,0,156,157,5,116,0,0,157,
        14,1,0,0,0,158,159,5,116,0,0,159,160,5,114,0,0,160,161,5,117,0,0,
        161,162,5,101,0,0,162,16,1,0,0,0,163,164,5,102,0,0,164,165,5,97,
        0,0,165,166,5,108,0,0,166,167,5,115,0,0,167,168,5,101,0,0,168,18,
        1,0,0,0,169,170,5,110,0,0,170,171,5,117,0,0,171,172,5,108,0,0,172,
        173,5,108,0,0,173,20,1,0,0,0,174,175,3,59,29,0,175,176,3,55,27,0,
        176,22,1,0,0,0,177,182,5,34,0,0,178,181,3,27,13,0,179,181,3,35,17,
        0,180,178,1,0,0,0,180,179,1,0,0,0,181,184,1,0,0,0,182,183,1,0,0,
        0,182,180,1,0,0,0,183,185,1,0,0,0,184,182,1,0,0,0,185,204,5,34,0,
        0,186,191,5,39,0,0,187,190,3,27,13,0,188,190,3,35,17,0,189,187,1,
        0,0,0,189,188,1,0,0,0,190,193,1,0,0,0,191,192,1,0,0,0,191,189,1,
        0,0,0,192,194,1,0,0,0,193,191,1,0,0,0,194,204,5,39,0,0,195,199,5,
        96,0,0,196,198,9,0,0,0,197,196,1,0,0,0,198,201,1,0,0,0,199,200,1,
        0,0,0,199,197,1,0,0,0,200,202,1,0,0,0,201,199,1,0,0,0,202,204,5,
        96,0,0,203,177,1,0,0,0,203,186,1,0,0,0,203,195,1,0,0,0,204,24,1,
        0,0,0,205,208,5,47,0,0,206,209,3,27,13,0,207,209,3,35,17,0,208,206,
        1,0,0,0,208,207,1,0,0,0,209,210,1,0,0,0,210,211,1,0,0,0,210,208,
        1,0,0,0,211,212,1,0,0,0,212,216,5,47,0,0,213,215,7,0,0,0,214,213,
        1,0,0,0,215,218,1,0,0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,26,1,
        0,0,0,218,216,1,0,0,0,219,223,5,92,0,0,220,224,7,1,0,0,221,224,3,
        29,14,0,222,224,3,31,15,0,223,220,1,0,0,0,223,221,1,0,0,0,223,222,
        1,0,0,0,224,28,1,0,0,0,225,226,5,117,0,0,226,227,3,33,16,0,227,228,
        3,33,16,0,228,229,3,33,16,0,229,230,3,33,16,0,230,30,1,0,0,0,231,
        232,5,120,0,0,232,233,3,33,16,0,233,234,3,33,16,0,234,32,1,0,0,0,
        235,236,7,2,0,0,236,34,1,0,0,0,237,238,8,3,0,0,238,36,1,0,0,0,239,
        242,3,39,19,0,240,241,5,46,0,0,241,243,3,39,19,0,242,240,1,0,0,0,
        242,243,1,0,0,0,243,245,1,0,0,0,244,246,3,41,20,0,245,244,1,0,0,
        0,245,246,1,0,0,0,246,38,1,0,0,0,247,249,7,4,0,0,248,247,1,0,0,0,
        249,250,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,40,1,0,0,0,252,
        254,7,5,0,0,253,255,7,6,0,0,254,253,1,0,0,0,254,255,1,0,0,0,255,
        256,1,0,0,0,256,257,3,39,19,0,257,42,1,0,0,0,258,260,7,7,0,0,259,
        258,1,0,0,0,259,260,1,0,0,0,260,261,1,0,0,0,261,265,7,4,0,0,262,
        263,5,50,0,0,263,265,7,8,0,0,264,259,1,0,0,0,264,262,1,0,0,0,265,
        44,1,0,0,0,266,267,7,9,0,0,267,268,7,4,0,0,268,46,1,0,0,0,269,270,
        3,43,21,0,270,271,5,58,0,0,271,274,3,45,22,0,272,273,5,58,0,0,273,
        275,3,45,22,0,274,272,1,0,0,0,274,275,1,0,0,0,275,48,1,0,0,0,276,
        277,3,37,18,0,277,278,7,10,0,0,278,50,1,0,0,0,279,280,5,100,0,0,
        280,281,3,23,11,0,281,52,1,0,0,0,282,283,5,111,0,0,283,284,3,23,
        11,0,284,54,1,0,0,0,285,290,3,57,28,0,286,289,7,4,0,0,287,289,3,
        57,28,0,288,286,1,0,0,0,288,287,1,0,0,0,289,292,1,0,0,0,290,288,
        1,0,0,0,290,291,1,0,0,0,291,56,1,0,0,0,292,290,1,0,0,0,293,294,7,
        11,0,0,294,58,1,0,0,0,295,296,5,58,0,0,296,60,1,0,0,0,297,298,5,
        59,0,0,298,62,1,0,0,0,299,300,5,123,0,0,300,64,1,0,0,0,301,302,5,
        125,0,0,302,66,1,0,0,0,303,304,5,40,0,0,304,68,1,0,0,0,305,306,5,
        41,0,0,306,70,1,0,0,0,307,308,5,91,0,0,308,72,1,0,0,0,309,310,5,
        93,0,0,310,74,1,0,0,0,311,312,5,44,0,0,312,76,1,0,0,0,313,314,5,
        43,0,0,314,78,1,0,0,0,315,316,5,61,0,0,316,317,5,62,0,0,317,80,1,
        0,0,0,318,319,5,45,0,0,319,82,1,0,0,0,320,321,5,42,0,0,321,84,1,
        0,0,0,322,323,5,47,0,0,323,86,1,0,0,0,324,325,5,37,0,0,325,88,1,
        0,0,0,326,327,5,46,0,0,327,90,1,0,0,0,328,329,5,38,0,0,329,92,1,
        0,0,0,330,331,5,124,0,0,331,94,1,0,0,0,332,333,5,62,0,0,333,96,1,
        0,0,0,334,335,5,60,0,0,335,98,1,0,0,0,336,337,5,62,0,0,337,338,5,
        61,0,0,338,100,1,0,0,0,339,340,5,60,0,0,340,341,5,61,0,0,341,102,
        1,0,0,0,342,343,5,33,0,0,343,344,5,61,0,0,344,104,1,0,0,0,345,346,
        5,61,0,0,346,106,1,0,0,0,347,348,5,37,0,0,348,349,5,37,0,0,349,108,
        1,0,0,0,350,351,5,126,0,0,351,110,1,0,0,0,352,353,5,36,0,0,353,112,
        1,0,0,0,354,356,7,12,0,0,355,354,1,0,0,0,356,357,1,0,0,0,357,355,
        1,0,0,0,357,358,1,0,0,0,358,359,1,0,0,0,359,360,6,56,0,0,360,114,
        1,0,0,0,361,362,5,47,0,0,362,363,5,42,0,0,363,367,1,0,0,0,364,366,
        9,0,0,0,365,364,1,0,0,0,366,369,1,0,0,0,367,368,1,0,0,0,367,365,
        1,0,0,0,368,370,1,0,0,0,369,367,1,0,0,0,370,371,5,42,0,0,371,372,
        5,47,0,0,372,373,1,0,0,0,373,374,6,57,0,0,374,116,1,0,0,0,375,376,
        5,47,0,0,376,377,5,47,0,0,377,381,1,0,0,0,378,380,8,13,0,0,379,378,
        1,0,0,0,380,383,1,0,0,0,381,379,1,0,0,0,381,382,1,0,0,0,382,384,
        1,0,0,0,383,381,1,0,0,0,384,385,6,58,0,0,385,118,1,0,0,0,23,0,180,
        182,189,191,199,203,208,210,216,223,242,245,250,254,259,264,274,
        288,290,357,367,381,1,6,0,0
    ]

class QueryExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    SHORTCUT = 11
    STRING = 12
    REGEX = 13
    NUMBER = 14
    TIME = 15
    TIME_INTERVAL = 16
    DATETIME = 17
    OBJECT_ID = 18
    ID = 19
    Colon = 20
    Semicolon = 21
    LBrace = 22
    RBrace = 23
    LPar = 24
    RPar = 25
    LBrack = 26
    RBrack = 27
    Comma = 28
    Plus = 29
    Join = 30
    Minus = 31
    Star = 32
    Div = 33
    Mod = 34
    Dot = 35
    And = 36
    Or = 37
    Gt = 38
    Lt = 39
    Gte = 40
    Lte = 41
    Ne = 42
    Eq = 43
    Search = 44
    Tilde = 45
    Dollar = 46
    WS = 47
    COMMENT = 48
    LINE_COMMENT = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'else'", "'repeat'", "'for'", "'break'", "'continue'", 
            "'halt'", "'true'", "'false'", "'null'", "':'", "';'", "'{'", 
            "'}'", "'('", "')'", "'['", "']'", "','", "'+'", "'=>'", "'-'", 
            "'*'", "'/'", "'%'", "'.'", "'&'", "'|'", "'>'", "'<'", "'>='", 
            "'<='", "'!='", "'='", "'%%'", "'~'", "'$'" ]

    symbolicNames = [ "<INVALID>",
            "SHORTCUT", "STRING", "REGEX", "NUMBER", "TIME", "TIME_INTERVAL", 
            "DATETIME", "OBJECT_ID", "ID", "Colon", "Semicolon", "LBrace", 
            "RBrace", "LPar", "RPar", "LBrack", "RBrack", "Comma", "Plus", 
            "Join", "Minus", "Star", "Div", "Mod", "Dot", "And", "Or", "Gt", 
            "Lt", "Gte", "Lte", "Ne", "Eq", "Search", "Tilde", "Dollar", 
            "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "SHORTCUT", "STRING", "REGEX", 
                  "ESC", "UNICODE", "HEXCODE", "HEX", "SAFECODEPOINT", "NUMBER", 
                  "INT", "EXP", "HOUR", "MS60", "TIME", "TIME_INTERVAL", 
                  "DATETIME", "OBJECT_ID", "ID", "ALPHABETICS", "Colon", 
                  "Semicolon", "LBrace", "RBrace", "LPar", "RPar", "LBrack", 
                  "RBrack", "Comma", "Plus", "Join", "Minus", "Star", "Div", 
                  "Mod", "Dot", "And", "Or", "Gt", "Lt", "Gte", "Lte", "Ne", 
                  "Eq", "Search", "Tilde", "Dollar", "WS", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "QueryExpr.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


