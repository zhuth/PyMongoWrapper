# Generated from QExpr.g by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,50,395,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,
        1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,
        1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,
        10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,5,12,190,8,12,10,12,12,12,
        193,9,12,1,12,1,12,1,12,1,12,5,12,199,8,12,10,12,12,12,202,9,12,
        1,12,1,12,1,12,5,12,207,8,12,10,12,12,12,210,9,12,1,12,3,12,213,
        8,12,1,13,1,13,1,13,4,13,218,8,13,11,13,12,13,219,1,13,1,13,5,13,
        224,8,13,10,13,12,13,227,9,13,1,14,1,14,1,14,1,14,3,14,233,8,14,
        1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,18,
        1,18,1,19,1,19,1,19,3,19,252,8,19,1,19,3,19,255,8,19,1,20,4,20,258,
        8,20,11,20,12,20,259,1,21,1,21,3,21,264,8,21,1,21,1,21,1,22,3,22,
        269,8,22,1,22,1,22,1,22,3,22,274,8,22,1,23,1,23,1,23,1,24,1,24,1,
        24,1,24,1,24,3,24,284,8,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,
        27,1,27,1,28,1,28,1,28,5,28,298,8,28,10,28,12,28,301,9,28,1,29,1,
        29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,
        36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,
        42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,
        48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,
        53,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,4,57,365,8,57,11,57,12,
        57,366,1,57,1,57,1,58,1,58,1,58,1,58,5,58,375,8,58,10,58,12,58,378,
        9,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,5,59,389,8,59,
        10,59,12,59,392,9,59,1,59,1,59,5,191,200,208,219,376,0,60,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,0,31,0,33,0,35,0,37,0,39,15,41,0,43,0,45,0,47,0,49,16,51,17,53,
        18,55,19,57,20,59,0,61,21,63,22,65,23,67,24,69,25,71,26,73,27,75,
        28,77,29,79,30,81,31,83,32,85,33,87,34,89,35,91,36,93,37,95,38,97,
        39,99,40,101,41,103,42,105,43,107,44,109,45,111,46,113,47,115,48,
        117,49,119,50,1,0,14,5,0,73,73,105,105,109,109,115,115,120,120,9,
        0,34,34,39,39,47,47,92,92,98,98,102,102,110,110,114,114,116,116,
        3,0,48,57,65,70,97,102,3,0,0,31,34,34,92,92,1,0,48,57,2,0,69,69,
        101,101,2,0,43,43,45,45,1,0,48,49,1,0,48,51,1,0,48,53,6,0,100,100,
        104,105,109,109,115,115,119,119,121,121,5,0,35,35,64,90,95,95,97,
        122,128,65535,3,0,9,10,13,13,32,32,2,0,10,10,13,13,408,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,39,1,0,0,0,0,49,1,0,0,0,0,
        51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,61,1,0,0,0,0,
        63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,
        73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,
        83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,
        93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,
        0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,
        0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,1,
        121,1,0,0,0,3,124,1,0,0,0,5,129,1,0,0,0,7,136,1,0,0,0,9,140,1,0,
        0,0,11,147,1,0,0,0,13,153,1,0,0,0,15,162,1,0,0,0,17,167,1,0,0,0,
        19,172,1,0,0,0,21,178,1,0,0,0,23,183,1,0,0,0,25,212,1,0,0,0,27,214,
        1,0,0,0,29,228,1,0,0,0,31,234,1,0,0,0,33,240,1,0,0,0,35,244,1,0,
        0,0,37,246,1,0,0,0,39,248,1,0,0,0,41,257,1,0,0,0,43,261,1,0,0,0,
        45,273,1,0,0,0,47,275,1,0,0,0,49,278,1,0,0,0,51,285,1,0,0,0,53,288,
        1,0,0,0,55,291,1,0,0,0,57,294,1,0,0,0,59,302,1,0,0,0,61,304,1,0,
        0,0,63,306,1,0,0,0,65,308,1,0,0,0,67,310,1,0,0,0,69,312,1,0,0,0,
        71,314,1,0,0,0,73,316,1,0,0,0,75,318,1,0,0,0,77,320,1,0,0,0,79,322,
        1,0,0,0,81,324,1,0,0,0,83,327,1,0,0,0,85,329,1,0,0,0,87,331,1,0,
        0,0,89,333,1,0,0,0,91,335,1,0,0,0,93,337,1,0,0,0,95,339,1,0,0,0,
        97,341,1,0,0,0,99,343,1,0,0,0,101,345,1,0,0,0,103,348,1,0,0,0,105,
        351,1,0,0,0,107,354,1,0,0,0,109,356,1,0,0,0,111,359,1,0,0,0,113,
        361,1,0,0,0,115,364,1,0,0,0,117,370,1,0,0,0,119,384,1,0,0,0,121,
        122,5,105,0,0,122,123,5,102,0,0,123,2,1,0,0,0,124,125,5,101,0,0,
        125,126,5,108,0,0,126,127,5,115,0,0,127,128,5,101,0,0,128,4,1,0,
        0,0,129,130,5,114,0,0,130,131,5,101,0,0,131,132,5,112,0,0,132,133,
        5,101,0,0,133,134,5,97,0,0,134,135,5,116,0,0,135,6,1,0,0,0,136,137,
        5,102,0,0,137,138,5,111,0,0,138,139,5,114,0,0,139,8,1,0,0,0,140,
        141,5,114,0,0,141,142,5,101,0,0,142,143,5,116,0,0,143,144,5,117,
        0,0,144,145,5,114,0,0,145,146,5,110,0,0,146,10,1,0,0,0,147,148,5,
        98,0,0,148,149,5,114,0,0,149,150,5,101,0,0,150,151,5,97,0,0,151,
        152,5,107,0,0,152,12,1,0,0,0,153,154,5,99,0,0,154,155,5,111,0,0,
        155,156,5,110,0,0,156,157,5,116,0,0,157,158,5,105,0,0,158,159,5,
        110,0,0,159,160,5,117,0,0,160,161,5,101,0,0,161,14,1,0,0,0,162,163,
        5,104,0,0,163,164,5,97,0,0,164,165,5,108,0,0,165,166,5,116,0,0,166,
        16,1,0,0,0,167,168,5,116,0,0,168,169,5,114,0,0,169,170,5,117,0,0,
        170,171,5,101,0,0,171,18,1,0,0,0,172,173,5,102,0,0,173,174,5,97,
        0,0,174,175,5,108,0,0,175,176,5,115,0,0,176,177,5,101,0,0,177,20,
        1,0,0,0,178,179,5,110,0,0,179,180,5,117,0,0,180,181,5,108,0,0,181,
        182,5,108,0,0,182,22,1,0,0,0,183,184,3,61,30,0,184,185,3,57,28,0,
        185,24,1,0,0,0,186,191,5,34,0,0,187,190,3,29,14,0,188,190,3,37,18,
        0,189,187,1,0,0,0,189,188,1,0,0,0,190,193,1,0,0,0,191,192,1,0,0,
        0,191,189,1,0,0,0,192,194,1,0,0,0,193,191,1,0,0,0,194,213,5,34,0,
        0,195,200,5,39,0,0,196,199,3,29,14,0,197,199,3,37,18,0,198,196,1,
        0,0,0,198,197,1,0,0,0,199,202,1,0,0,0,200,201,1,0,0,0,200,198,1,
        0,0,0,201,203,1,0,0,0,202,200,1,0,0,0,203,213,5,39,0,0,204,208,5,
        96,0,0,205,207,9,0,0,0,206,205,1,0,0,0,207,210,1,0,0,0,208,209,1,
        0,0,0,208,206,1,0,0,0,209,211,1,0,0,0,210,208,1,0,0,0,211,213,5,
        96,0,0,212,186,1,0,0,0,212,195,1,0,0,0,212,204,1,0,0,0,213,26,1,
        0,0,0,214,217,5,47,0,0,215,218,3,29,14,0,216,218,3,37,18,0,217,215,
        1,0,0,0,217,216,1,0,0,0,218,219,1,0,0,0,219,220,1,0,0,0,219,217,
        1,0,0,0,220,221,1,0,0,0,221,225,5,47,0,0,222,224,7,0,0,0,223,222,
        1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,28,1,
        0,0,0,227,225,1,0,0,0,228,232,5,92,0,0,229,233,7,1,0,0,230,233,3,
        31,15,0,231,233,3,33,16,0,232,229,1,0,0,0,232,230,1,0,0,0,232,231,
        1,0,0,0,233,30,1,0,0,0,234,235,5,117,0,0,235,236,3,35,17,0,236,237,
        3,35,17,0,237,238,3,35,17,0,238,239,3,35,17,0,239,32,1,0,0,0,240,
        241,5,120,0,0,241,242,3,35,17,0,242,243,3,35,17,0,243,34,1,0,0,0,
        244,245,7,2,0,0,245,36,1,0,0,0,246,247,8,3,0,0,247,38,1,0,0,0,248,
        251,3,41,20,0,249,250,5,46,0,0,250,252,3,41,20,0,251,249,1,0,0,0,
        251,252,1,0,0,0,252,254,1,0,0,0,253,255,3,43,21,0,254,253,1,0,0,
        0,254,255,1,0,0,0,255,40,1,0,0,0,256,258,7,4,0,0,257,256,1,0,0,0,
        258,259,1,0,0,0,259,257,1,0,0,0,259,260,1,0,0,0,260,42,1,0,0,0,261,
        263,7,5,0,0,262,264,7,6,0,0,263,262,1,0,0,0,263,264,1,0,0,0,264,
        265,1,0,0,0,265,266,3,41,20,0,266,44,1,0,0,0,267,269,7,7,0,0,268,
        267,1,0,0,0,268,269,1,0,0,0,269,270,1,0,0,0,270,274,7,4,0,0,271,
        272,5,50,0,0,272,274,7,8,0,0,273,268,1,0,0,0,273,271,1,0,0,0,274,
        46,1,0,0,0,275,276,7,9,0,0,276,277,7,4,0,0,277,48,1,0,0,0,278,279,
        3,45,22,0,279,280,5,58,0,0,280,283,3,47,23,0,281,282,5,58,0,0,282,
        284,3,47,23,0,283,281,1,0,0,0,283,284,1,0,0,0,284,50,1,0,0,0,285,
        286,3,39,19,0,286,287,7,10,0,0,287,52,1,0,0,0,288,289,5,100,0,0,
        289,290,3,25,12,0,290,54,1,0,0,0,291,292,5,111,0,0,292,293,3,25,
        12,0,293,56,1,0,0,0,294,299,3,59,29,0,295,298,7,4,0,0,296,298,3,
        59,29,0,297,295,1,0,0,0,297,296,1,0,0,0,298,301,1,0,0,0,299,297,
        1,0,0,0,299,300,1,0,0,0,300,58,1,0,0,0,301,299,1,0,0,0,302,303,7,
        11,0,0,303,60,1,0,0,0,304,305,5,58,0,0,305,62,1,0,0,0,306,307,5,
        59,0,0,307,64,1,0,0,0,308,309,5,123,0,0,309,66,1,0,0,0,310,311,5,
        125,0,0,311,68,1,0,0,0,312,313,5,40,0,0,313,70,1,0,0,0,314,315,5,
        41,0,0,315,72,1,0,0,0,316,317,5,91,0,0,317,74,1,0,0,0,318,319,5,
        93,0,0,319,76,1,0,0,0,320,321,5,44,0,0,321,78,1,0,0,0,322,323,5,
        43,0,0,323,80,1,0,0,0,324,325,5,61,0,0,325,326,5,62,0,0,326,82,1,
        0,0,0,327,328,5,45,0,0,328,84,1,0,0,0,329,330,5,42,0,0,330,86,1,
        0,0,0,331,332,5,47,0,0,332,88,1,0,0,0,333,334,5,37,0,0,334,90,1,
        0,0,0,335,336,5,46,0,0,336,92,1,0,0,0,337,338,5,38,0,0,338,94,1,
        0,0,0,339,340,5,124,0,0,340,96,1,0,0,0,341,342,5,62,0,0,342,98,1,
        0,0,0,343,344,5,60,0,0,344,100,1,0,0,0,345,346,5,62,0,0,346,347,
        5,61,0,0,347,102,1,0,0,0,348,349,5,60,0,0,349,350,5,61,0,0,350,104,
        1,0,0,0,351,352,5,33,0,0,352,353,5,61,0,0,353,106,1,0,0,0,354,355,
        5,61,0,0,355,108,1,0,0,0,356,357,5,37,0,0,357,358,5,37,0,0,358,110,
        1,0,0,0,359,360,5,126,0,0,360,112,1,0,0,0,361,362,5,36,0,0,362,114,
        1,0,0,0,363,365,7,12,0,0,364,363,1,0,0,0,365,366,1,0,0,0,366,364,
        1,0,0,0,366,367,1,0,0,0,367,368,1,0,0,0,368,369,6,57,0,0,369,116,
        1,0,0,0,370,371,5,47,0,0,371,372,5,42,0,0,372,376,1,0,0,0,373,375,
        9,0,0,0,374,373,1,0,0,0,375,378,1,0,0,0,376,377,1,0,0,0,376,374,
        1,0,0,0,377,379,1,0,0,0,378,376,1,0,0,0,379,380,5,42,0,0,380,381,
        5,47,0,0,381,382,1,0,0,0,382,383,6,58,0,0,383,118,1,0,0,0,384,385,
        5,47,0,0,385,386,5,47,0,0,386,390,1,0,0,0,387,389,8,13,0,0,388,387,
        1,0,0,0,389,392,1,0,0,0,390,388,1,0,0,0,390,391,1,0,0,0,391,393,
        1,0,0,0,392,390,1,0,0,0,393,394,6,59,0,0,394,120,1,0,0,0,23,0,189,
        191,198,200,208,212,217,219,225,232,251,254,259,263,268,273,283,
        297,299,366,376,390,1,6,0,0
    ]

class QExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    SHORTCUT = 12
    STRING = 13
    REGEX = 14
    NUMBER = 15
    TIME = 16
    TIME_INTERVAL = 17
    DATETIME = 18
    OBJECT_ID = 19
    ID = 20
    Colon = 21
    Semicolon = 22
    LBrace = 23
    RBrace = 24
    LPar = 25
    RPar = 26
    LBrack = 27
    RBrack = 28
    Comma = 29
    Plus = 30
    Join = 31
    Minus = 32
    Star = 33
    Div = 34
    Mod = 35
    Dot = 36
    And = 37
    Or = 38
    Gt = 39
    Lt = 40
    Gte = 41
    Lte = 42
    Ne = 43
    Eq = 44
    Search = 45
    Tilde = 46
    Dollar = 47
    WS = 48
    COMMENT = 49
    LINE_COMMENT = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'else'", "'repeat'", "'for'", "'return'", "'break'", 
            "'continue'", "'halt'", "'true'", "'false'", "'null'", "':'", 
            "';'", "'{'", "'}'", "'('", "')'", "'['", "']'", "','", "'+'", 
            "'=>'", "'-'", "'*'", "'/'", "'%'", "'.'", "'&'", "'|'", "'>'", 
            "'<'", "'>='", "'<='", "'!='", "'='", "'%%'", "'~'", "'$'" ]

    symbolicNames = [ "<INVALID>",
            "SHORTCUT", "STRING", "REGEX", "NUMBER", "TIME", "TIME_INTERVAL", 
            "DATETIME", "OBJECT_ID", "ID", "Colon", "Semicolon", "LBrace", 
            "RBrace", "LPar", "RPar", "LBrack", "RBrack", "Comma", "Plus", 
            "Join", "Minus", "Star", "Div", "Mod", "Dot", "And", "Or", "Gt", 
            "Lt", "Gte", "Lte", "Ne", "Eq", "Search", "Tilde", "Dollar", 
            "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "SHORTCUT", "STRING", 
                  "REGEX", "ESC", "UNICODE", "HEXCODE", "HEX", "SAFECODEPOINT", 
                  "NUMBER", "INT", "EXP", "HOUR", "MS60", "TIME", "TIME_INTERVAL", 
                  "DATETIME", "OBJECT_ID", "ID", "ALPHABETICS", "Colon", 
                  "Semicolon", "LBrace", "RBrace", "LPar", "RPar", "LBrack", 
                  "RBrack", "Comma", "Plus", "Join", "Minus", "Star", "Div", 
                  "Mod", "Dot", "And", "Or", "Gt", "Lt", "Gte", "Lte", "Ne", 
                  "Eq", "Search", "Tilde", "Dollar", "WS", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "QExpr.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


